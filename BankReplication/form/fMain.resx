<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>813, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v19.2" name="DevExpress.Utils.v19.2, Version=19.2.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v19.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxOS4yLCBWZXJzaW9uPTE5LjIu
        NS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAACgAAAAoAAAACQUAAAAP
        BQAAAOYQAAACVAQAAIlQTkcNChoKAAAADUlIRFIAAAAoAAAAKAgGAAAAjP64bQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAP2SURBVFhHzZhNaFRXFMcnyWRiFknaZBHQ1FBIrVDdNFAQ
        v8BdXQoRRGjBRV1rsStlunUhUsGVUFoUP0ZRodBu/FiqrYLSbqqgi1pbsVYQFUptx9//eo++vLlz7x2d
        AQM/zpv/O+d/zsy8e9/LVPjrazabDh3X6/X+N0rLSopoxPfgM9gHh+EIfAVba7XaEmJHfmXNDZhKCmkD
        AwNzxEvQTPAjKLfjHv51x4XvwHkIDRNDNYsze7zUOhzuQ7gL1vQpnIZNQ0ND7xJrMzMzQ0Qdb4JToBzL
        V+0s5A3HMWQP9z78BdbsAixP1Q4ODi73uVZ3n2tzqc6lap2WlVSpLIBfwJochFpmbZ//VFVj9T9PTU0N
        59RmLZL+/v5dRDP/HqqhvIRWhR/AfHZCspYYT5qYmBgh/g0yVZxsZ5ahTcIDcF7eO16bakD8BOxd19vl
        5WrEOpjfp6laSDY4BjL7H9w2ofOvMpzXFoO85Hk0WdsilJLgOsjs11heh5p5KkZrcxbJE5CZFkfULFcD
        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
        pK2JAAAAAElFTkSuQmCCCw==
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>160, 17</value>
  </metadata>
  <metadata name="xtraTabbedMdiManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>320, 17</value>
  </metadata>
  <metadata name="documentManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>585, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>1017, 17</value>
  </metadata>
</root>